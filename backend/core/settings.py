"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""

from pathlib import Path
from datetime import timedelta

BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-g8ys#yjz9llw@#wk-%c8ylf+_f*pucu5-ku1f+ak6(^au^f(bb"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]  # For dev; restrict in production


# --------------------------------------------------------
# Applications
# --------------------------------------------------------
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third-party
    "rest_framework",
    "rest_framework.authtoken",
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist",
    "corsheaders",
    "user_sessions",
    "rest_framework_tracking",
    "silk",

    # Local apps
    "accounts",
    "certificates",
    "courses",
    "enrollments",
    "quizzes",
    "drf_api_logger"
]


# --------------------------------------------------------
# Middleware
# --------------------------------------------------------
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "drf_api_logger.middleware.api_logger_middleware.APILoggerMiddleware",
    "user_sessions.middleware.SessionMiddleware",
]

# DRF API Logger settings
DRF_API_LOGGER_DATABASE = True   # store logs in DB
DRF_API_LOGGER_SIGNAL = True     # enable Django signals
DRF_API_LOGGER_EXCLUDE_KEYS = ["password", "token", "access", "refresh"]  # mask sensitive data
DRF_API_LOGGER_PATH_TYPE = "ABSOLUTE"  # show full API path
DRF_API_LOGGER_METHODS = ["GET", "POST", "PUT", "PATCH", "DELETE"]  # log these methods
DRF_API_LOGGER_SKIP_NAMESPACE = []  # if you want to skip some apps

CORS_ALLOW_ALL_ORIGINS = DEBUG  # allow all in dev
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # React dev server
    "https://yourfrontend.com",
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
    "https://yourfrontend.com",
]


# --------------------------------------------------------
# URL / WSGI
# --------------------------------------------------------
ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"


# --------------------------------------------------------
# Database
# --------------------------------------------------------
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "lms_db",
        "USER": "lms_user",
        "PASSWORD": "lms_pass",
        "HOST": "localhost",
        "PORT": "5432",
    }
}


# --------------------------------------------------------
# Passwords
# --------------------------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
]


# --------------------------------------------------------
# Custom User
# --------------------------------------------------------
AUTH_USER_MODEL = "accounts.User"


# --------------------------------------------------------
# Django Rest Framework
# --------------------------------------------------------
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
}


# --------------------------------------------------------
# JWT Settings
# --------------------------------------------------------
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "AUTH_HEADER_TYPES": ("Bearer",),
}


# --------------------------------------------------------
# Internationalization
# --------------------------------------------------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Asia/Kolkata"
USE_I18N = True
USE_TZ = True


# --------------------------------------------------------
# Static & Media
# --------------------------------------------------------
STATIC_URL = "/static/"
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"


# --------------------------------------------------------
# Logging
# --------------------------------------------------------
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {"class": "logging.StreamHandler"},
    },
    "root": {
        "handlers": ["console"],
        "level": "INFO",
    },
}


# --------------------------------------------------------
# Default Primary Key
# --------------------------------------------------------
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
SESSION_ENGINE = "user_sessions.backends.db"
SESSION_COOKIE_AGE = 60 * 60 * 24 * 7  # 7 days